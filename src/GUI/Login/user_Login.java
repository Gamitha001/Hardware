/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Login;

import database.databaseconnection;
import database.validation;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author vextroidMAC
 */
public class user_Login extends javax.swing.JPanel {

    int xmouse;
    int ymouse;

    String postype;
    String user;
    String name;
    int count;
    int status;
    String emp;

    Date d;
    SimpleDateFormat sdf;
    String devusername = "dvlpr";
    String devpassword = "qwe";

    public user_Login() {
        initComponents();
        loadtime_date();
        password.setEchoChar((char) 0);
        password.setText("PASSWORD");
        password.setTransferHandler(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        loginb = new org.jdesktop.swingx.JXButton();
        jXButton2 = new org.jdesktop.swingx.JXButton();
        username = new org.jdesktop.swingx.JXTextField();
        password = new javax.swing.JPasswordField();

        jXLabel1.setText("Username");

        jXLabel2.setText("Password");

        loginb.setText("LOGIN");
        loginb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginbActionPerformed(evt);
            }
        });

        jXButton2.setText("Forgot your password?");
        jXButton2.setBorderPainted(false);
        jXButton2.setContentAreaFilled(false);
        jXButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton2ActionPerformed(evt);
            }
        });

        username.setText("USERNAME");
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(loginb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(208, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(loginb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jXButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton2ActionPerformed
   if (!username.getText().equals("USERNAME") && username.getText().length() != 0) {
            try {

                String email = JOptionPane.showInputDialog(this, "Enter your email address");

                if (!email.equals("")) {
                    email = validation.emailget(email);

                    if (email.equals("wrong")) {
                        throw new Exception();
                    }
                    ResultSet rs = databaseconnection.search("SELECT re.eemail FROM regemployee re INNER JOIN user u ON u.emp_id=re.regEMPid WHERE u.username='" + username.getText() + "' ");
                    ResultSet rs2 = databaseconnection.search("SELECT recover_password FROM user WHERE username='" + username.getText() + "' ");
                    String rec = "";
                    if (rs2.first()) {
                        rec = rs2.getString(1);
                    }
                    if (rs.first()) {
                        if (rs.getString(1).equals(email)) {

                            String from = "flowerfactory95@gmail.com";
                            String epassword = "vextroid1996";
                            String[] to = {rs.getString(1)};
                            String host = "smtp.gmail.com";

                            Properties prop = System.getProperties();
                            prop.put("mail.smtp.starttls.enable", "true");
                            prop.put("mail.smtp.host", host);
                            prop.put("mail.smtp.user", from);
                            prop.put("mail.smtp.password", password);
                            prop.put("mail.smtp.port", "587");
                            prop.put("mail.smtp.auth", "true");

                            Session sees = Session.getDefaultInstance(prop);
                            MimeMessage msg = new MimeMessage(sees);
                            msg.setFrom(new InternetAddress(from));
                            InternetAddress[] add = new InternetAddress[to.length];
                            for (int i = 0; i < to.length; i++) {
                                add[i] = new InternetAddress(to[i]);

                            }
                            for (int i = 0; i < add.length; i++) {
                                msg.setRecipient(Message.RecipientType.TO, add[i]);
                            }
                            msg.setSubject("Login Recovery");
                            msg.setContent("This is your Recovery Password..\n Copy this and enter this password field..\n " + rec + " ", "text/html; charset=utf-8");

                            Transport trans = sees.getTransport("smtp");
                            trans.connect(host, from, epassword);
                            trans.sendMessage(msg, msg.getAllRecipients());
                            trans.close();
                            JOptionPane.showMessageDialog(this, "Password send\nCheck your email to get your password");

                        } else {
                            JOptionPane.showMessageDialog(this, "Please enter your email for this username", "WARNING", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Please enter valid username", "WARNING", JOptionPane.WARNING_MESSAGE);
                    }
                }

            } catch (NullPointerException ex) {

            } catch (Exception e) {
                //JOptionPane.showMessageDialog(this, "Please enter a vald email");
                //jButton1.doClick();
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Enter your username first", "WARNING", JOptionPane.WARNING_MESSAGE);
            username.grabFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jXButton2ActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        password.setText("");
        password.setEchoChar('*');
        password.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void usernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusGained
  username.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_usernameFocusGained

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusGained
        password.setEchoChar('*');
        password.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFocusGained

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusLost
        if (username.getText().equals("")) {
            username.setText("USERNAME");
        }         // TODO add your handling code here:
    }//GEN-LAST:event_usernameFocusLost

    private void passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusLost
        String p = new String(password.getPassword());

        if (p.equals("")) {
            password.setEchoChar((char) 0);
            password.setText("PASSWORD");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFocusLost

    private void loginbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginbActionPerformed
  try {
            String p = new String(password.getPassword());

            boolean b = false;

            if (username.getText().equals(devusername) && new String(password.getPassword()).equals(devpassword)) {
                postype = "dvlpr";
                user = "dvlpr";

                //home h = new home(postype, user);
                //h.setVisible(true);
                //this.dispose();

            } else {
                ResultSet rs1 = databaseconnection.search("SELECT * FROM user WHERE username='" + username.getText() + "'");
                if (rs1.first()) {
                    if (rs1.getInt("status") == 1) {
                        if (!p.startsWith("[C")) {
                            b = logincheck();

                        } else {
                            b = logincheckwithr();

                            emp = rs1.getString("emp_id");
                            System.out.println(emp);
                            edituser edu = new edituser(null, true, emp, username.getText().toString());
                            edu.empid = emp;
                            edu.setVisible(true);

                        }

                        if (b) {
                            ResultSet rs = databaseconnection.search("SELECT * FROM user WHERE user_username='" + username.getText() + "'");

                            if (rs.first()) {

                               // postype = rs.getString("position");
                               // user = rs.getString("efname") + " " + rs.getString("elname");
                               // home h = new home(postype, user);
                                System.out.println(postype + " " + user);
                                //h.setVisible(true);
                            
                            } else {
                                //postype = "admin";
                                //user = "admin";

                               // home h = new home(postype, user);
                             //   h.setVisible(true);
                             

                            }

                        } else {
                            name = username.getText();
                            System.out.println(name);
                            count++;
                            System.out.println(count);

                            if (name.equals(username.getText())) {

                                switch (count) {

                                    case 1:
                                        JOptionPane.showMessageDialog(this, "4 Attempts are Remaining\nCheck your username and password ...", "Login Attempts Faild", JOptionPane.WARNING_MESSAGE);
                                        break;
                                    case 2:
                                        JOptionPane.showMessageDialog(this, "3 Attempts are Remaining\nCheck your username and password ...", "Login Attempts Faild", JOptionPane.WARNING_MESSAGE);
                                        break;
                                    case 3:
                                        JOptionPane.showMessageDialog(this, "2 Attempts are Remaining\nCheck your username and password ...", "Login Attempts Faild", JOptionPane.WARNING_MESSAGE);
                                        break;
                                    case 4:
                                        JOptionPane.showMessageDialog(this, "1 Attempts are Remaining\nCheck your username and password ...", "Login Attempts Faild", JOptionPane.WARNING_MESSAGE);
                                        break;
                                    default:
                                        JOptionPane.showMessageDialog(this, "Your account is locked..\n Please use forget password function to get your recovery code", "Login Attempts Faild", JOptionPane.WARNING_MESSAGE);
                                        databaseconnection.iud("UPDATE user set status='0' WHERE username='" + username.getText() + "' ");
                                        break;

                                }
                            } else {
                                name = "";
                                count = 0;

                            }
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Your Account has been deleted or locked..\n Please contact the admin");
                    }

                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_loginbActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton jXButton2;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXButton loginb;
    private javax.swing.JPasswordField password;
    private org.jdesktop.swingx.JXTextField username;
    // End of variables declaration//GEN-END:variables

    private void loadtime_date() {
        try {

            Timer timer = new Timer(1000, new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {

                    d = new Date();
                    sdf = new SimpleDateFormat("dd/MM/yyyy");
                    SimpleDateFormat sdf1 = new SimpleDateFormat();

                    sdf = new SimpleDateFormat("hh:mm a");
                    sdf1 = new SimpleDateFormat("hh:mm:ss a");

                    if (sdf1.format(d).equals("10:00:00 AM")) {
                        try {
                            String ti = "TBACK";
                            databaseconnection.BackupDatabase(ti);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                    if (sdf1.format(d).equals("12:00:00 PM")) {
                        try {
                            String ti = "TBACK";
                            databaseconnection.BackupDatabase(ti);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                    if (sdf1.format(d).equals("03:00:00 PM")) {
                        try {
                            String ti = "TBACk";
                            databaseconnection.BackupDatabase(ti);

                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }

                }
            });
            timer.start();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public Boolean logincheck() {
        try {
            String p = new String(password.getPassword());

            String username23 = this.username.getText();
            String password23 = p;
            Connection conn = databaseconnection.newCon();
            String sql = "SELECT * FROM  user Where user_username=?"
                    + "AND user_password =?";

            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, username23);
            ps.setString(2, password23);

            ResultSet rs = ps.executeQuery();
            if (rs.next()) {

                return true;
            } else {
                return false;
            }

        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

    public Boolean logincheckwithr() {
        try {
            String p = new String(password.getPassword());

            String username = this.username.getText();
            String password = p;
            Connection conn = databaseconnection.newCon();
            String sql = "SELECT * FROM  user Where user_username=?"
                    + "AND recovery_password =?";

            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, username);
            ps.setString(2, password);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {

                return true;
            } else {

                return false;
            }

        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
}
